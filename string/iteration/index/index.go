package main

import "fmt"

// 인덱스를 사용해 바이트 단위 순회
func main()  {
	str := "Hello 월드!"

	for i := 0; i < len(str); i++ {
		fmt.Printf(" 타입:%T 값:%d 문자값:%c\n", str[i], str[i], str[i])
	}
}

// 타입:uint8 값:72 문자값:H
// 타입:uint8 값:101 문자값:e
// 타입:uint8 값:108 문자값:l
// 타입:uint8 값:108 문자값:l
// 타입:uint8 값:111 문자값:o
// 타입:uint8 값:32 문자값: 
// 타입:uint8 값:236 문자값:ì
// 타입:uint8 값:155 문자값:
// 입:uint8 값:148 문자값:
// 타입:uint8 값:235 문자값:ë
// 타입:uint8 값:147 문자값:
// 타입:uint8 값:156 문자값:
// 타입:uint8 값:33 문자값:!

// 값: ASCII 문자
// 한글의 경우 UTF-8 인코딩으로 인해 한 글자가 3바이트로 쪼개집니다
// 그래서 '월'이 236, 155, 148 세 바이트로 표현

// 인덱스로 접근 시 요소 타입: uint8(byte) 따라서 3바이트인 한글은 깨져서 표시
